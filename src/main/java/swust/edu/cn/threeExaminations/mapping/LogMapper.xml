<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="swust.edu.cn.threeExaminations.dao.LogMapper" >
  <resultMap id="BaseResultMap" type="swust.edu.cn.threeExaminations.model.Log" >
    <id column="log_id" property="logId" jdbcType="INTEGER" />
    <result column="log_operationTime" property="logOperationtime" jdbcType="TIMESTAMP" />
    <result column="log_operationObject" property="logOperationobject" jdbcType="VARCHAR" />
    <result column="log_operationType" property="logOperationtype" jdbcType="VARCHAR" />
    <result column="log_retain" property="logRetain" jdbcType="VARCHAR" />
    <result column="log_userId" property="logUserid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    log_id, log_operationTime, log_operationObject, log_operationType, log_retain, log_userId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="swust.edu.cn.threeExaminations.model.Log" >
    insert into log (log_id, log_operationTime, log_operationObject, 
      log_operationType, log_retain, log_userId
      )
    values (#{logId,jdbcType=INTEGER}, #{logOperationtime,jdbcType=TIMESTAMP}, #{logOperationobject,jdbcType=VARCHAR}, 
      #{logOperationtype,jdbcType=VARCHAR}, #{logRetain,jdbcType=VARCHAR}, #{logUserid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="swust.edu.cn.threeExaminations.model.Log" >
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="logOperationtime != null" >
        log_operationTime,
      </if>
      <if test="logOperationobject != null" >
        log_operationObject,
      </if>
      <if test="logOperationtype != null" >
        log_operationType,
      </if>
      <if test="logRetain != null" >
        log_retain,
      </if>
      <if test="logUserid != null" >
        log_userId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="logOperationtime != null" >
        #{logOperationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logOperationobject != null" >
        #{logOperationobject,jdbcType=VARCHAR},
      </if>
      <if test="logOperationtype != null" >
        #{logOperationtype,jdbcType=VARCHAR},
      </if>
      <if test="logRetain != null" >
        #{logRetain,jdbcType=VARCHAR},
      </if>
      <if test="logUserid != null" >
        #{logUserid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="swust.edu.cn.threeExaminations.model.Log" >
    update log
    <set >
      <if test="logOperationtime != null" >
        log_operationTime = #{logOperationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logOperationobject != null" >
        log_operationObject = #{logOperationobject,jdbcType=VARCHAR},
      </if>
      <if test="logOperationtype != null" >
        log_operationType = #{logOperationtype,jdbcType=VARCHAR},
      </if>
      <if test="logRetain != null" >
        log_retain = #{logRetain,jdbcType=VARCHAR},
      </if>
      <if test="logUserid != null" >
        log_userId = #{logUserid,jdbcType=INTEGER},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="swust.edu.cn.threeExaminations.model.Log" >
    update log
    set log_operationTime = #{logOperationtime,jdbcType=TIMESTAMP},
      log_operationObject = #{logOperationobject,jdbcType=VARCHAR},
      log_operationType = #{logOperationtype,jdbcType=VARCHAR},
      log_retain = #{logRetain,jdbcType=VARCHAR},
      log_userId = #{logUserid,jdbcType=INTEGER}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>